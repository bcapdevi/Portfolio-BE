services:
  app:
    build: 
      context: .
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-8080}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER:-portfolio}
      - DB_PASSWORD=${DB_PASSWORD:-portfolio}
      - DB_NAME=${DB_NAME:-portfolio}
      - DB_SSL=false
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        npm run migrate:up &&
        echo 'Starting server...' &&
        npm start
      "

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-portfolio}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-portfolio}
      POSTGRES_DB: ${DB_NAME:-portfolio}
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-portfolio}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: